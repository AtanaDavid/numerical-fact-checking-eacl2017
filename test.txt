

nes = []
numbers = []

for i in range(annotations.get(CoreAnnotations.TokensAnnotation).size()):
    corelabel = annotations.get(CoreAnnotations.TokensAnnotation).get(i)
    numbers.append(corelabel.get(CoreAnnotations.NamedEntityTagAnnotation) in number_ne_types)
    nes.append(corelabel.get(CoreAnnotations.NamedEntityTagAnnotation) != "O" and not numbers[-1])


depgraph = annotations.get(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation)

entities = set(chunk(annotations,nes)).union(set(chunk(annotations,compound(depgraph,nes))))
nums = set(chunk(annotations,numbers))

print ([(x,y) for x in entities for y in nums])






table = read_file('csv/201-csv/2.csv')

rows = table[1]






text = ". ".join(" ".join(cell for cell in row) for row in rows)
print(text)
doc = Annotation(text)
pipeline.annotate(doc)

for sentence in range(doc.get(CoreAnnotations.SentencesAnnotation).size()):
    annotations = doc.get(CoreAnnotations.SentencesAnnotation).get(sentence)

    numbers = []
    for i in range(annotations.get(CoreAnnotations.TokensAnnotation).size()):
        corelabel = annotations.get(CoreAnnotations.TokensAnnotation).get(i)

        numbers.append(corelabel.get(CoreAnnotations.NamedEntityTagAnnotation))
    print(numbers)